{"version":3,"sources":["components/CardMovie/index.js","components/CardMovie/CardMovie.jsx","movieapi-service.js","components/App/App.jsx","components/App/index.js","index.js"],"names":["CardMovie","croppingText","text","slice","indexOf","transformGenreName","genreId","props","genreNames","filter","item","id","name","this","title","posterPath","overview","releaseDate","genreIds","dateRelise","format","Date","Item","className","hoverable","cover","src","alt","map","React","Component","MovieService","_transformSearchMovies","movie","popularity","voteAverage","vote_average","originalTitle","original_title","poster_path","release_date","genre_ids","fetch","resolve","ok","Error","status","json","searchMovie","getResource","body","results","genres","App","movieService","addGenreNames","getGenreNames","then","setState","onSearchMoviesListLoaded","moviesList","updateSearchMovies","getSearchMovies","onChange","pageNumber","window","scrollTo","state","defaultCurrent","Search","Input","placeholder","enterButton","size","onSearch","value","grid","gutter","md","dataSource","renderItem","total","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.802b1379.chunk.js","sourcesContent":["import CardMovie from './CardMovie';\r\n\r\nexport default CardMovie;","import React from 'react';\r\nimport { Card, List } from 'antd';\r\nimport { format } from 'date-fns';\r\n\r\nimport './CardMovie.css';\r\nimport \"../../../node_modules/typeface-inter\";\r\n\r\nclass CardMovie extends React.Component {\r\n\r\n\tcroppingText = (text) => {\r\n\t\treturn text.slice(0, text.indexOf(' ', 200)) + '...';\r\n\t}\r\n\r\n\ttransformGenreName = (genreId) => {\r\n\t\tconst [el] = this.props.genreNames.filter((item) => genreId === item.id);\r\n\t\treturn el.name;\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\tconst { title, posterPath, overview, releaseDate, genreIds } = this.props;\r\n\r\n\t\tconst dateRelise = format(new Date(releaseDate), 'MMMM dd, yyyy');\r\n\r\n\t\treturn (\r\n\t\t\t<List.Item>\r\n\t\t\t\t<Card\r\n\t\t\t\t\tclassName=\"card-movie\"\r\n\t\t\t\t\thoverable\r\n\t\t\t\t\tcover={posterPath ? <img src={`http://image.tmdb.org/t/p/w185${posterPath}`} alt=\"Poster\" /> : <span className=\"no-poster\"><i>'No poster'</i></span>}\r\n\t\t\t\t>\r\n\t\t\t\t\t<h5>{title}</h5>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"card-date\">{dateRelise}</span> \r\n\t\t\t\t\t\t<div className=\"genres\">\r\n\t\t\t\t\t\t\t{genreIds.map((item) => <span className=\"card-genre\">{this.transformGenreName(item)}</span>)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"card-desc\">\r\n\t\t\t\t\t\t\t{this.croppingText(overview)}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>    \r\n\t\t\t\t</Card>\r\n\t\t\t</List.Item>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CardMovie;","export default class MovieService {\r\n\r\n  async getResource(movie) {\r\n    const resolve = await fetch(movie);\r\n\r\n    if (!resolve.ok) {\r\n      throw new Error(`Could not fetch ${movie} received ${resolve.status}`);\r\n    }\r\n    \r\n    return await resolve.json();\r\n  };\r\n  \r\n  async getSearchMovies(searchMovie) {\r\n    const body = await this.getResource(searchMovie);\r\n    return body.results.map(this._transformSearchMovies);\r\n  }\r\n\r\n  async getGenreNames() {\r\n    const resolve = await fetch('https://api.themoviedb.org/3/genre/movie/list?api_key=05f7db0eb20b02a8803d7f7d0f3fb520&language=ru-RU');\r\n    \r\n    if (!resolve.ok) {\r\n      throw new Error(`Could not fetch 'genre' received ${resolve.status}`);\r\n    }\r\n\r\n    const body = await resolve.json();\r\n    const { genres } = body;\r\n    return genres;\r\n  }\r\n  \r\n  _transformSearchMovies = (movie) => {\r\n    //console.log('transform movie: ', movie.genre_ids);\r\n    return {\r\n      id: movie.id,\r\n      popularity: movie.popularity,\r\n      voteAverage: movie.vote_average,\r\n      title: movie.title,\r\n      originalTitle: movie.original_title,\r\n      overview: movie.overview,\r\n      posterPath: movie.poster_path,\r\n      releaseDate: movie.release_date,\r\n      genreIds: movie.genre_ids,\r\n    };\r\n  }\r\n      \r\n}\r\n\r\n/*    const m = new MovieService();\r\n  m.getGenreNames().then(console.log);  */\r\n\r\n\r\n\r\n/*getResource('https://api.themoviedb.org/3/movie/popular?api_key=05f7db0eb20b02a8803d7f7d0f3fb520&language=ru-RU&page=1')\r\n  .then((body) => console.log(body)); */\r\n  \r\n\r\n\r\n/* fetch('https://api.themoviedb.org/3/movie/popular?api_key=05f7db0eb20b02a8803d7f7d0f3fb520&language=ru-RU&page=1')\r\n  .then((res) => res.json())\r\n  .then((body) => console.log(body.results)); */\r\n  \r\n  \r\n  /* const encoded = encodeURI(movie);\r\n  console.log(encoded); */\r\n\r\n  \r\n  /* fetch(`https://api.themoviedb.org/3/search/movie?api_key=05f7db0eb20b02a8803d7f7d0f3fb520&language=en-US&query=${encoded}&page=1&include_adult=false`)\r\n  .then((res) => res.json())\r\n  .then((body) => body.results)\r\n  .then((obj) => {\r\n    obj.map((el) => {\r\n      console.log('Название: ', el.title);\r\n      console.log('Оригинальное название: ', el.original_title);\r\n      console.log('Описание: ', el.overview);\r\n    })\r\n    \r\n  }); */\r\n\r\n \r\n    /* _extractId(item) {\r\n          const idRegExp = /\\/([0-9]*)\\/$/;\r\n          return item.url.match(idRegExp)[1];\r\n      } */\r\n\r\n\r\n/* async buildGenresIds(genresData) {\r\n      const body = await this.getGenresId();\r\n      const {genres} = body;\r\n      console.log(genres);\r\n      let arr;\r\n      for (let i = 0; i < genresData.length; i += 1) {\r\n        for (let j = 0; j < genres.length; j += 1) {\r\n          if (genres[j].id === genresData[i]) arr[i] = genres[j].name;\r\n        }\r\n        \r\n      }\r\n      console.log(arr);\r\n      return arr;\r\n    } */\r\n\r\n\r\n\r\n\r\n\r\n/*   async function getResource(movie) {\r\n    const resolve = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=05f7db0eb20b02a8803d7f7d0f3fb520&language=en-US&query=${movie}&page=1&include_adult=false`);\r\n    const body = resolve.json();\r\n    return body;\r\n  };\r\n\r\n  getResource(movie)\r\n    .then((body) => body.results)\r\n    .then((array) => {\r\n      array.map((el) => {\r\n        console.log('Название: ', el.title);\r\n        console.log('Оригинальное название: ', el.original_title);\r\n        console.log('Описание: ', el.overview);\r\n      })}); */\r\n\r\n//getResource - Ф. получения тела запроса\r\n\r\n//getSearchMovies - Ф. получения массива из тела запроса\r\n\r\n\r\n\r\n/* \r\nconst movieService = new MovieService();\r\n\r\nmovieService.getSearchMovies(searchMovie).then((a) => console.log(a));\r\n */","import React, { Component } from 'react';\r\nimport { List, Pagination, Input } from 'antd';\r\n\r\nimport CardMovie from '../CardMovie'\r\n\r\nimport MovieService from '../../movieapi-service';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n\tmovieService = new MovieService();\r\n\r\n\tstatic defaultProps = {\r\n\t\tdefaultCurrent: 1,\r\n\t}\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t\t\tsearchMovie: `https://api.themoviedb.org/3/search/movie?api_key=05f7db0eb20b02a8803d7f7d0f3fb520&language=en-US&query=return&page=${this.props.defaultCurrent}&include_adult=false`,\r\n\t\t\tmoviesList: [],\r\n\t\t\tgenreNames: [],\t\r\n\t\t}\r\n  }\r\n\r\n  componentDidMount() {\r\n\t\tthis.addGenreNames();\r\n\t\tthis.updateSearchMovies(this.state.searchMovie);\r\n\t}\r\n\r\n\taddGenreNames = () => {\r\n\t\tthis.movieService\r\n\t\t\t.getGenreNames()\r\n\t\t\t.then((genreNames) => this.setState({ genreNames }) );\r\n\t}\r\n\r\n\tonSearchMoviesListLoaded = (moviesList) => {\r\n\t\tthis.setState({ moviesList });\r\n\t}\r\n\t\r\n\tupdateSearchMovies = (movie) => {\r\n\t\tthis.movieService\r\n\t\t\t.getSearchMovies(movie)\r\n\t\t\t.then(this.onSearchMoviesListLoaded);\r\n  }\r\n\r\n  onChange = (pageNumber) => {\r\n    this.movieService\r\n\t\t\t.getSearchMovies(`https://api.themoviedb.org/3/search/movie?api_key=05f7db0eb20b02a8803d7f7d0f3fb520&language=en-US&query=return&page=${pageNumber}&include_adult=false`)\r\n\t\t\t.then(this.onSearchMoviesListLoaded);\r\n\t\t\twindow.scrollTo(0, 0);\r\n  }\r\n  \r\n  render() {\r\n\r\n\t\tconst { Search } = Input;\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Search className=\"search-input\"\r\n\t\t\t\t\tplaceholder=\"Input search text\"\r\n\t\t\t\t\tenterButton=\"Search\"\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\tonSearch={value => {\r\n\t\t\t\t\t\tthis.movieService\r\n\t\t\t\t\t\t\t.getSearchMovies(`https://api.themoviedb.org/3/search/movie?api_key=05f7db0eb20b02a8803d7f7d0f3fb520&language=en-US&query=${value}&page=1&include_adult=false`)\r\n\t\t\t\t\t\t\t.then(this.onSearchMoviesListLoaded);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<List className=\"list-align\"\r\n\t\t\t\t\t\tgrid={{\r\n\t\t\t\t\t\t\tgutter: 16,\r\n\t\t\t\t\t\t\tmd: 2,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdataSource={this.state.moviesList}\r\n\t\t\t\t\t\trenderItem={item => (\r\n\t\t\t\t\t\t\t<CardMovie title={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\tposterPath={item.posterPath}\r\n\t\t\t\t\t\t\t\t\t\t\t\toverview={item.overview}\r\n\t\t\t\t\t\t\t\t\t\t\t\treleaseDate={item.releaseDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\tgenreIds={item.genreIds}\r\n\t\t\t\t\t\t\t\t\t\t\t\tgenreNames={this.state.genreNames} />\r\n\t\t\t\t\t\t)} />\r\n\r\n\t\t\t\t<Pagination className=\"pagination-align\"\r\n\t\t\t\t\t\t\tdefaultCurrent={1} total={50}\r\n\t\t\t\t\t\t\tonChange={this.onChange} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}